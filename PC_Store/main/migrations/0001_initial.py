# Generated by Django 3.0.2 on 2020-03-29 14:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Color', models.CharField(max_length=50)),
                ('Supported_Motherboard_Form_Factors', models.CharField(max_length=100)),
                ('Fans', models.CharField(max_length=100)),
                ('Dimmensions', models.CharField(max_length=50)),
                ('Max_GPU_lenght', models.IntegerField()),
                ('Max_CPU_Cooler_height', models.IntegerField()),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Socket', models.CharField(max_length=10)),
                ('Nr_of_Cores', models.IntegerField()),
                ('Nr_of_Threads', models.IntegerField()),
                ('Frequency', models.FloatField()),
                ('Boost_Frequency', models.FloatField()),
                ('TDP', models.IntegerField()),
                ('Overclockable', models.BooleanField()),
                ('Integrated_GPU', models.CharField(max_length=50)),
                ('Release_Date', models.DateField()),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CPU_Cooler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Type', models.CharField(max_length=50)),
                ('Compatible_CPU_sockets', models.CharField(max_length=500)),
                ('Noise_Level', models.CharField(max_length=50)),
                ('Material', models.CharField(max_length=500)),
                ('Dimmensions', models.CharField(max_length=50)),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Nr_of_Cores', models.IntegerField()),
                ('Frequency', models.FloatField()),
                ('VRAM', models.IntegerField()),
                ('Ports', models.CharField(max_length=50)),
                ('Power', models.IntegerField()),
                ('Recommended_System_Power', models.IntegerField()),
                ('Release_Date', models.DateField()),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Form_Factor', models.CharField(max_length=50)),
                ('CPU_Brand', models.CharField(max_length=50)),
                ('Chipset', models.CharField(max_length=10)),
                ('CPU_socket', models.CharField(max_length=10)),
                ('Nr_of_PCIe_slots', models.IntegerField()),
                ('Nr_of_Ram_slots', models.IntegerField()),
                ('Nr_of_Sata_ports', models.IntegerField()),
                ('Nr_of_mdot2_slots', models.IntegerField()),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PSU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Efficiency_Rating', models.CharField(max_length=50)),
                ('Connectors', models.CharField(max_length=500)),
                ('Total_Wattage', models.IntegerField()),
                ('Dimmension', models.CharField(max_length=100)),
                ('Fan_size', models.IntegerField()),
                ('Form_Factor', models.CharField(max_length=10)),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Ram_set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Memory_Type', models.CharField(max_length=50)),
                ('Memory_amount', models.IntegerField()),
                ('Nr_of_Sticks', models.IntegerField()),
                ('Memory_speed', models.IntegerField()),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=50)),
                ('Type', models.CharField(max_length=10)),
                ('Connection', models.CharField(max_length=10)),
                ('Capacity', models.IntegerField()),
                ('Sequential_Read', models.FloatField()),
                ('Sequential_Write', models.FloatField()),
                ('Form_Factor', models.CharField(max_length=10)),
                ('Price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Saved_build',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Belongs_to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Configuration')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Recipient_First_Name', models.CharField(max_length=50)),
                ('Recipient_Last_Name', models.CharField(max_length=50)),
                ('Billing_address', models.CharField(max_length=50)),
                ('Delivery_address', models.CharField(max_length=50)),
                ('Order_Creation_Date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Payment_Method', models.CharField(max_length=50)),
                ('Configuration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Configuration')),
            ],
        ),
        migrations.AddField(
            model_name='configuration',
            name='CPU',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.CPU'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='CPU_Cooler',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.CPU_Cooler'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='Case',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Case'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='GPU',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.GPU'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='Motherboard',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Motherboard'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='PSU',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.PSU'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='Ram_set',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Ram_set'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='Storage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Storage'),
        ),
    ]
